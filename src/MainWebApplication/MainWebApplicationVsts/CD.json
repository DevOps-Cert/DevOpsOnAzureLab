{
  "source": 2,
  "id": 5,
  "revision": 2,
  "name": "CD",
  "description": null,
  "createdBy": {
    "id": "17256fe4-f2a3-4370-b081-ec283edb6a77",
    "displayName": "Mathieu Benoit",
    "uniqueName": "mabenoit@microsoft.com",
    "url": "https://app.vssps.visualstudio.com/A6d1a4ff8-9a1f-46cb-bd61-54cb9a797939/_apis/Identities/17256fe4-f2a3-4370-b081-ec283edb6a77",
    "imageUrl": "https://mabenoit-ms.visualstudio.com/_api/_common/identityImage?id=17256fe4-f2a3-4370-b081-ec283edb6a77"
  },
  "createdOn": "2017-11-06T00:19:44.177Z",
  "modifiedBy": {
    "id": "17256fe4-f2a3-4370-b081-ec283edb6a77",
    "displayName": "Mathieu Benoit",
    "uniqueName": "mabenoit@microsoft.com",
    "url": "https://app.vssps.visualstudio.com/A6d1a4ff8-9a1f-46cb-bd61-54cb9a797939/_apis/Identities/17256fe4-f2a3-4370-b081-ec283edb6a77",
    "imageUrl": "https://mabenoit-ms.visualstudio.com/_api/_common/identityImage?id=17256fe4-f2a3-4370-b081-ec283edb6a77"
  },
  "modifiedOn": "2017-11-06T00:21:56.040Z",
  "isDeleted": false,
  "path": "\\",
  "variables": {
    "AppServiceName": {
      "value": ""
    },
    "Location": {
      "value": "East US"
    },
    "ParentWebAppAlreadyExists": {
      "value": ""
    },
    "SlotToSwap": {
      "value": "staging"
    }
  },
  "variableGroups": [],
  "environments": [
    {
      "id": 15,
      "name": "DEV",
      "rank": 1,
      "owner": {
        "id": "17256fe4-f2a3-4370-b081-ec283edb6a77",
        "displayName": "Mathieu Benoit",
        "uniqueName": "mabenoit@microsoft.com",
        "url": "https://app.vssps.visualstudio.com/A6d1a4ff8-9a1f-46cb-bd61-54cb9a797939/_apis/Identities/17256fe4-f2a3-4370-b081-ec283edb6a77",
        "imageUrl": "https://mabenoit-ms.visualstudio.com/_api/_common/identityImage?id=17256fe4-f2a3-4370-b081-ec283edb6a77"
      },
      "variables": {},
      "preDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 43
          }
        ]
      },
      "deployStep": {
        "tasks": [],
        "id": 54
      },
      "postDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 55
          }
        ]
      },
      "deployPhases": [
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": "none"
            },
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": []
            },
            "queueId": 72,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 1,
          "phaseType": 1,
          "name": "Run on agent",
          "workflowTasks": [
            {
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "Provision infra",
              "refName": "AzureResourceGroupDeployment1",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "$(Parameters.ConnectedServiceName)",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(Parameters.WebAppName)",
                "location": "$(Location)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "",
                "csmParametersFileLink": "",
                "csmFile": "$(System.DefaultWorkingDirectory)/CI/infra/template.json",
                "csmParametersFile": "",
                "overrideParameters": "-hostingPlanName $(Parameters.WebAppName)",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "outputVariable": ""
              }
            },
            {
              "taskId": "497d490f-eea7-4f2b-ab94-48d9c1acdcb1",
              "version": "2.*",
              "name": "Deploy app",
              "refName": "AzureRmWebAppDeployment1",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": null,
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "$(Parameters.ConnectedServiceName)",
                "WebAppName": "$(Parameters.WebAppName)",
                "DeployToSlotFlag": "false",
                "ResourceGroupName": "",
                "SlotName": "",
                "VirtualApplication": "",
                "Package": "$(System.DefaultWorkingDirectory)/CI/app/MainWebApplication.zip",
                "WebAppUri": "",
                "UseWebDeploy": "true",
                "SetParametersFile": "",
                "RemoveAdditionalFilesFlag": "false",
                "ExcludeFilesFromAppDataFlag": "false",
                "AdditionalArguments": "",
                "TakeAppOfflineFlag": "true"
              }
            },
            {
              "taskId": "2a1711d0-b4a4-11e6-a3c2-edf36ba3fddc",
              "version": "1.*",
              "name": "CheckUrl",
              "refName": "checkurl1",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "url": "https://$(Parameters.WebAppName).azurewebsites.net"
              }
            },
            {
              "taskId": "ef087383-ee5e-42c7-9a53-ab56c98420f9",
              "version": "2.*",
              "name": "Run UITests",
              "refName": "VSTest1",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "testSelector": "testAssemblies",
                "testAssemblyVer2": "*SeleniumTests.dll",
                "testPlan": "",
                "testSuite": "",
                "testConfiguration": "",
                "tcmTestRun": "$(test.RunId)",
                "searchFolder": "$(System.DefaultWorkingDirectory)/CI/ui-tests",
                "testFiltercriteria": "TestCategory=SeleniumTests",
                "runOnlyImpactedTests": "False",
                "runAllTestsAfterXBuilds": "50",
                "uiTests": "false",
                "vstestLocationMethod": "version",
                "vsTestVersion": "latest",
                "vstestLocation": "",
                "runSettingsFile": "$(System.DefaultWorkingDirectory)/CI/ui-tests/TestRunParameters.runsettings",
                "overrideTestrunParameters": "-BaseUrl https://$(Parameters.WebAppName).azurewebsites.net/ -Browser PhantomJS",
                "pathtoCustomTestAdapters": "",
                "runInParallel": "False",
                "runTestsInIsolation": "False",
                "codeCoverageEnabled": "False",
                "otherConsoleOptions": "",
                "distributionBatchType": "basedOnTestCases",
                "batchingBasedOnAgentsOption": "autoBatchSize",
                "customBatchSizeValue": "10",
                "batchingBasedOnExecutionTimeOption": "autoBatchSize",
                "customRunTimePerBatchValue": "60",
                "dontDistribute": "False",
                "testRunTitle": "Selenium Tests",
                "platform": "$(ReleasePlatform)",
                "configuration": "$(ReleaseConfiguration)",
                "publishRunAttachments": "true"
              }
            }
          ]
        }
      ],
      "environmentOptions": {
        "emailNotificationType": "OnlyOnFailure",
        "emailRecipients": "release.environment.owner;release.creator",
        "skipArtifactsDownload": false,
        "timeoutInMinutes": 0,
        "enableAccessToken": false,
        "publishDeploymentStatus": true
      },
      "demands": [],
      "conditions": [
        {
          "name": "ReleaseStarted",
          "conditionType": 1,
          "value": ""
        }
      ],
      "executionPolicy": {
        "concurrencyCount": 0,
        "queueDepthCount": 0
      },
      "schedules": [],
      "retentionPolicy": {
        "daysToKeep": 30,
        "releasesToKeep": 3,
        "retainBuild": true
      },
      "processParameters": {
        "inputs": [
          {
            "options": {},
            "properties": {},
            "name": "ConnectedServiceName",
            "label": "Azure subscription",
            "defaultValue": "f85bb269-a6c2-4b50-b89e-e7d5ec1a4e5f",
            "required": true,
            "type": "connectedService:AzureRM",
            "helpMarkDown": "Select the Azure Resource Manager subscription for the deployment.",
            "visibleRule": "",
            "groupName": ""
          },
          {
            "options": {},
            "properties": {
              "EditableOptions": "True"
            },
            "name": "WebAppName",
            "label": "App service name",
            "defaultValue": "$(AppServiceName)-dev",
            "required": true,
            "type": "pickList",
            "helpMarkDown": "Enter or select the name of an existing Azure App Service.",
            "visibleRule": "",
            "groupName": ""
          }
        ]
      },
      "properties": {}
    },
    {
      "id": 16,
      "name": "QA-staging",
      "rank": 2,
      "owner": {
        "id": "17256fe4-f2a3-4370-b081-ec283edb6a77",
        "displayName": "Mathieu Benoit",
        "uniqueName": "mabenoit@microsoft.com",
        "url": "https://app.vssps.visualstudio.com/A6d1a4ff8-9a1f-46cb-bd61-54cb9a797939/_apis/Identities/17256fe4-f2a3-4370-b081-ec283edb6a77",
        "imageUrl": "https://mabenoit-ms.visualstudio.com/_api/_common/identityImage?id=17256fe4-f2a3-4370-b081-ec283edb6a77"
      },
      "variables": {},
      "preDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 44
          }
        ]
      },
      "deployStep": {
        "tasks": [],
        "id": 53
      },
      "postDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 56
          }
        ]
      },
      "deployPhases": [
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": "none"
            },
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": []
            },
            "queueId": 72,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 1,
          "phaseType": 1,
          "name": "Agent phase",
          "workflowTasks": [
            {
              "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
              "version": "2.*",
              "name": "Check if parent web app already exists",
              "refName": "ClonedClonedClonedAzurePowerShell2123",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameSelector": "ConnectedServiceNameARM",
                "ConnectedServiceName": "",
                "ConnectedServiceNameARM": "$(Parameters.ConnectedServiceName)",
                "ScriptType": "FilePath",
                "ScriptPath": "$(System.DefaultWorkingDirectory)/CI/infra/CheckIfParentWebAppAlreadyExists.ps1",
                "Inline": "# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments",
                "ScriptArguments": "-WebAppName $(Parameters.WebAppName)",
                "TargetAzurePs": "LatestVersion",
                "CustomTargetAzurePs": ""
              }
            },
            {
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "Provision parent web app infra (if needed)",
              "refName": "AzureResourceGroupDeployment1",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "and(succeeded(), eq(variables['ParentWebAppAlreadyExists'], false))",
              "inputs": {
                "ConnectedServiceName": "$(Parameters.ConnectedServiceName)",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(Parameters.WebAppName)",
                "location": "$(Location)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "",
                "csmParametersFileLink": "",
                "csmFile": "$(System.DefaultWorkingDirectory)/CI/infra/template.json",
                "csmParametersFile": "",
                "overrideParameters": "-hostingPlanName $(Parameters.WebAppName)",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "outputVariable": ""
              }
            },
            {
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "Provision slot infra",
              "refName": "ClonedAzureResourceGroupDeployment11",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "$(Parameters.ConnectedServiceName)",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(Parameters.WebAppName)",
                "location": "$(Location)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "",
                "csmParametersFileLink": "",
                "csmFile": "$(System.DefaultWorkingDirectory)/CI/infra/template-slot.json",
                "csmParametersFile": "",
                "overrideParameters": "-webAppName $(Parameters.WebAppName) -slotName $(SlotToSwap)",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "outputVariable": ""
              }
            },
            {
              "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
              "version": "2.*",
              "name": "Set Resource Group Lock",
              "refName": "AzurePowerShell2",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameSelector": "ConnectedServiceNameARM",
                "ConnectedServiceName": "",
                "ConnectedServiceNameARM": "$(Parameters.ConnectedServiceName)",
                "ScriptType": "FilePath",
                "ScriptPath": "$(System.DefaultWorkingDirectory)/CI/infra/AddResourceGroupDoNotDeleteLock.ps1",
                "Inline": "# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments",
                "ScriptArguments": "-ResourceGroupName $(Parameters.WebAppName)",
                "TargetAzurePs": "LatestVersion",
                "CustomTargetAzurePs": ""
              }
            },
            {
              "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
              "version": "2.*",
              "name": "Set Resource Group ResourceTypes policy",
              "refName": "ClonedAzurePowerShell21",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameSelector": "ConnectedServiceNameARM",
                "ConnectedServiceName": "",
                "ConnectedServiceNameARM": "$(Parameters.ConnectedServiceName)",
                "ScriptType": "FilePath",
                "ScriptPath": "$(System.DefaultWorkingDirectory)/CI/infra/AddResourceGroupAllowedResourceTypesPolicy.ps1",
                "Inline": "# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments",
                "ScriptArguments": "-ResourceGroupName $(Parameters.WebAppName)",
                "TargetAzurePs": "LatestVersion",
                "CustomTargetAzurePs": ""
              }
            },
            {
              "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
              "version": "2.*",
              "name": "Set Resource Group Locations policy",
              "refName": "ClonedClonedAzurePowerShell212",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameSelector": "ConnectedServiceNameARM",
                "ConnectedServiceName": "",
                "ConnectedServiceNameARM": "$(Parameters.ConnectedServiceName)",
                "ScriptType": "FilePath",
                "ScriptPath": "$(System.DefaultWorkingDirectory)/CI/infra/AddResourceGroupAllowedLocationsPolicy.ps1",
                "Inline": "# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments",
                "ScriptArguments": "-ResourceGroupName $(Parameters.WebAppName)",
                "TargetAzurePs": "LatestVersion",
                "CustomTargetAzurePs": ""
              }
            },
            {
              "taskId": "497d490f-eea7-4f2b-ab94-48d9c1acdcb1",
              "version": "2.*",
              "name": "Deploy app",
              "refName": "AzureRmWebAppDeployment2",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "$(Parameters.ConnectedServiceName)",
                "WebAppName": "$(Parameters.WebAppName)",
                "DeployToSlotFlag": "true",
                "ResourceGroupName": "$(Parameters.WebAppName)",
                "SlotName": "$(SlotToSwap)",
                "VirtualApplication": "",
                "Package": "$(System.DefaultWorkingDirectory)/CI/app/MainWebApplication.zip",
                "WebAppUri": "",
                "UseWebDeploy": "true",
                "SetParametersFile": "",
                "RemoveAdditionalFilesFlag": "false",
                "ExcludeFilesFromAppDataFlag": "false",
                "AdditionalArguments": "",
                "TakeAppOfflineFlag": "true"
              }
            },
            {
              "taskId": "2a1711d0-b4a4-11e6-a3c2-edf36ba3fddc",
              "version": "1.*",
              "name": "CheckUrl",
              "refName": "checkurl3",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "url": "https://$(Parameters.WebAppName)-$(SlotToSwap).azurewebsites.net"
              }
            },
            {
              "taskId": "ef087383-ee5e-42c7-9a53-ab56c98420f9",
              "version": "2.*",
              "name": "Run UITests",
              "refName": "VSTest4",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "testSelector": "testAssemblies",
                "testAssemblyVer2": "*SeleniumTests.dll",
                "testPlan": "",
                "testSuite": "",
                "testConfiguration": "",
                "tcmTestRun": "$(test.RunId)",
                "searchFolder": "$(System.DefaultWorkingDirectory)/CI/ui-tests",
                "testFiltercriteria": "TestCategory=SeleniumTests",
                "runOnlyImpactedTests": "False",
                "runAllTestsAfterXBuilds": "50",
                "uiTests": "false",
                "vstestLocationMethod": "version",
                "vsTestVersion": "latest",
                "vstestLocation": "",
                "runSettingsFile": "$(System.DefaultWorkingDirectory)/CI/ui-tests/TestRunParameters.runsettings",
                "overrideTestrunParameters": "-BaseUrl https://$(Parameters.WebAppName)-$(SlotToSwap).azurewebsites.net/ -Browser PhantomJS",
                "pathtoCustomTestAdapters": "",
                "runInParallel": "False",
                "runTestsInIsolation": "False",
                "codeCoverageEnabled": "False",
                "otherConsoleOptions": "",
                "distributionBatchType": "basedOnTestCases",
                "batchingBasedOnAgentsOption": "autoBatchSize",
                "customBatchSizeValue": "10",
                "batchingBasedOnExecutionTimeOption": "autoBatchSize",
                "customRunTimePerBatchValue": "60",
                "dontDistribute": "False",
                "testRunTitle": "Selenium Tests",
                "platform": "$(ReleasePlatform)",
                "configuration": "$(ReleaseConfiguration)",
                "publishRunAttachments": "true"
              }
            }
          ]
        }
      ],
      "environmentOptions": {
        "emailNotificationType": "OnlyOnFailure",
        "emailRecipients": "release.environment.owner;release.creator",
        "skipArtifactsDownload": false,
        "timeoutInMinutes": 0,
        "enableAccessToken": false,
        "publishDeploymentStatus": true
      },
      "demands": [],
      "conditions": [
        {
          "name": "DEV",
          "conditionType": 2,
          "value": "4"
        }
      ],
      "executionPolicy": {
        "concurrencyCount": 0,
        "queueDepthCount": 0
      },
      "schedules": [],
      "retentionPolicy": {
        "daysToKeep": 30,
        "releasesToKeep": 3,
        "retainBuild": true
      },
      "processParameters": {
        "inputs": [
          {
            "options": {},
            "properties": {},
            "name": "ConnectedServiceName",
            "label": "Azure subscription",
            "defaultValue": "f85bb269-a6c2-4b50-b89e-e7d5ec1a4e5f",
            "required": true,
            "type": "connectedService:AzureRM",
            "helpMarkDown": "Select the Azure Resource Manager subscription for the deployment.",
            "visibleRule": "",
            "groupName": ""
          },
          {
            "options": {},
            "properties": {
              "EditableOptions": "True"
            },
            "name": "WebAppName",
            "label": "App service name",
            "defaultValue": "$(AppServiceName)-qa",
            "required": true,
            "type": "pickList",
            "helpMarkDown": "Enter or select the name of an existing Azure App Service.",
            "visibleRule": "",
            "groupName": ""
          }
        ]
      },
      "properties": {}
    },
    {
      "id": 17,
      "name": "QA",
      "rank": 3,
      "owner": {
        "id": "17256fe4-f2a3-4370-b081-ec283edb6a77",
        "displayName": "Mathieu Benoit",
        "uniqueName": "mabenoit@microsoft.com",
        "url": "https://app.vssps.visualstudio.com/A6d1a4ff8-9a1f-46cb-bd61-54cb9a797939/_apis/Identities/17256fe4-f2a3-4370-b081-ec283edb6a77",
        "imageUrl": "https://mabenoit-ms.visualstudio.com/_api/_common/identityImage?id=17256fe4-f2a3-4370-b081-ec283edb6a77"
      },
      "variables": {},
      "preDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 45
          }
        ]
      },
      "deployStep": {
        "tasks": [],
        "id": 52
      },
      "postDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 57
          }
        ]
      },
      "deployPhases": [
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": "none"
            },
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": []
            },
            "queueId": 72,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 1,
          "phaseType": 1,
          "name": "Agent phase",
          "workflowTasks": [
            {
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "Provision infra",
              "refName": "AzureResourceGroupDeployment1",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "$(Parameters.ConnectedServiceName)",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(Parameters.WebAppName)",
                "location": "$(Location)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "",
                "csmParametersFileLink": "",
                "csmFile": "$(System.DefaultWorkingDirectory)/CI/infra/template.json",
                "csmParametersFile": "",
                "overrideParameters": "-hostingPlanName $(Parameters.WebAppName)",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "outputVariable": ""
              }
            },
            {
              "taskId": "f045e430-8704-11e6-968f-e717e6411619",
              "version": "0.*",
              "name": "Swap Slots",
              "refName": "AzureAppServiceManage2",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "$(Parameters.ConnectedServiceName)",
                "Action": "Swap Slots",
                "WebAppName": "$(Parameters.WebAppName)",
                "SpecifySlot": "false",
                "ResourceGroupName": "$(Parameters.WebAppName)",
                "SourceSlot": "$(SlotToSwap)",
                "SwapWithProduction": "true",
                "TargetSlot": "",
                "PreserveVnet": "false",
                "Slot": "",
                "ExtensionsList": "",
                "OutputVariable": "",
                "AppInsightsResourceGroupName": "",
                "ApplicationInsightsResourceName": ""
              }
            },
            {
              "taskId": "2a1711d0-b4a4-11e6-a3c2-edf36ba3fddc",
              "version": "1.*",
              "name": "CheckUrl",
              "refName": "checkurl3",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "url": "https://$(Parameters.WebAppName).azurewebsites.net"
              }
            },
            {
              "taskId": "ef087383-ee5e-42c7-9a53-ab56c98420f9",
              "version": "2.*",
              "name": "Run UITests",
              "refName": "VSTest4",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "testSelector": "testAssemblies",
                "testAssemblyVer2": "*SeleniumTests.dll",
                "testPlan": "",
                "testSuite": "",
                "testConfiguration": "",
                "tcmTestRun": "$(test.RunId)",
                "searchFolder": "$(System.DefaultWorkingDirectory)/CI/ui-tests",
                "testFiltercriteria": "TestCategory=SeleniumTests",
                "runOnlyImpactedTests": "False",
                "runAllTestsAfterXBuilds": "50",
                "uiTests": "false",
                "vstestLocationMethod": "version",
                "vsTestVersion": "latest",
                "vstestLocation": "",
                "runSettingsFile": "$(System.DefaultWorkingDirectory)/CI/ui-tests/TestRunParameters.runsettings",
                "overrideTestrunParameters": "-BaseUrl https://$(Parameters.WebAppName).azurewebsites.net/ -Browser PhantomJS",
                "pathtoCustomTestAdapters": "",
                "runInParallel": "False",
                "runTestsInIsolation": "False",
                "codeCoverageEnabled": "False",
                "otherConsoleOptions": "",
                "distributionBatchType": "basedOnTestCases",
                "batchingBasedOnAgentsOption": "autoBatchSize",
                "customBatchSizeValue": "10",
                "batchingBasedOnExecutionTimeOption": "autoBatchSize",
                "customRunTimePerBatchValue": "60",
                "dontDistribute": "False",
                "testRunTitle": "Selenium Tests",
                "platform": "$(ReleasePlatform)",
                "configuration": "$(ReleaseConfiguration)",
                "publishRunAttachments": "true"
              }
            }
          ]
        }
      ],
      "environmentOptions": {
        "emailNotificationType": "OnlyOnFailure",
        "emailRecipients": "release.environment.owner;release.creator",
        "skipArtifactsDownload": false,
        "timeoutInMinutes": 0,
        "enableAccessToken": false,
        "publishDeploymentStatus": true
      },
      "demands": [],
      "conditions": [
        {
          "name": "QA-staging",
          "conditionType": 2,
          "value": "4"
        }
      ],
      "executionPolicy": {
        "concurrencyCount": 0,
        "queueDepthCount": 0
      },
      "schedules": [],
      "retentionPolicy": {
        "daysToKeep": 30,
        "releasesToKeep": 3,
        "retainBuild": true
      },
      "processParameters": {
        "inputs": [
          {
            "options": {},
            "properties": {},
            "name": "ConnectedServiceName",
            "label": "Azure subscription",
            "defaultValue": "f85bb269-a6c2-4b50-b89e-e7d5ec1a4e5f",
            "required": true,
            "type": "connectedService:AzureRM",
            "helpMarkDown": "Select the Azure Resource Manager subscription for the deployment.",
            "visibleRule": "",
            "groupName": ""
          },
          {
            "options": {},
            "properties": {
              "EditableOptions": "True"
            },
            "name": "WebAppName",
            "label": "App service name",
            "defaultValue": "$(AppServiceName)-qa",
            "required": true,
            "type": "pickList",
            "helpMarkDown": "Enter or select the name of an existing Azure App Service.",
            "visibleRule": "",
            "groupName": ""
          }
        ]
      },
      "properties": {}
    },
    {
      "id": 18,
      "name": "Rollback QA",
      "rank": 4,
      "owner": {
        "id": "17256fe4-f2a3-4370-b081-ec283edb6a77",
        "displayName": "Mathieu Benoit",
        "uniqueName": "mabenoit@microsoft.com",
        "url": "https://app.vssps.visualstudio.com/A6d1a4ff8-9a1f-46cb-bd61-54cb9a797939/_apis/Identities/17256fe4-f2a3-4370-b081-ec283edb6a77",
        "imageUrl": "https://mabenoit-ms.visualstudio.com/_api/_common/identityImage?id=17256fe4-f2a3-4370-b081-ec283edb6a77"
      },
      "variables": {},
      "preDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 46
          }
        ]
      },
      "deployStep": {
        "tasks": [],
        "id": 51
      },
      "postDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 58
          }
        ]
      },
      "deployPhases": [
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": "none"
            },
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": []
            },
            "queueId": 72,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 1,
          "phaseType": 1,
          "name": "Agent phase",
          "workflowTasks": [
            {
              "taskId": "f045e430-8704-11e6-968f-e717e6411619",
              "version": "0.*",
              "name": "Swap Slots",
              "refName": "AzureAppServiceManage2",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "$(Parameters.ConnectedServiceName)",
                "Action": "Swap Slots",
                "WebAppName": "$(Parameters.WebAppName)",
                "SpecifySlot": "false",
                "ResourceGroupName": "$(Parameters.WebAppName)",
                "SourceSlot": "$(SlotToSwap)",
                "SwapWithProduction": "true",
                "TargetSlot": "",
                "PreserveVnet": "false",
                "Slot": "",
                "ExtensionsList": "",
                "OutputVariable": "",
                "AppInsightsResourceGroupName": "",
                "ApplicationInsightsResourceName": ""
              }
            },
            {
              "taskId": "2a1711d0-b4a4-11e6-a3c2-edf36ba3fddc",
              "version": "1.*",
              "name": "CheckUrl",
              "refName": "checkurl3",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "url": "https://$(Parameters.WebAppName).azurewebsites.net"
              }
            },
            {
              "taskId": "ef087383-ee5e-42c7-9a53-ab56c98420f9",
              "version": "2.*",
              "name": "Run UITests",
              "refName": "VSTest4",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "testSelector": "testAssemblies",
                "testAssemblyVer2": "*SeleniumTests.dll",
                "testPlan": "",
                "testSuite": "",
                "testConfiguration": "",
                "tcmTestRun": "$(test.RunId)",
                "searchFolder": "$(System.DefaultWorkingDirectory)/CI/ui-tests",
                "testFiltercriteria": "TestCategory=SeleniumTests",
                "runOnlyImpactedTests": "False",
                "runAllTestsAfterXBuilds": "50",
                "uiTests": "false",
                "vstestLocationMethod": "version",
                "vsTestVersion": "latest",
                "vstestLocation": "",
                "runSettingsFile": "$(System.DefaultWorkingDirectory)/CI/ui-tests/TestRunParameters.runsettings",
                "overrideTestrunParameters": "-BaseUrl https://$(Parameters.WebAppName).azurewebsites.net/ -Browser PhantomJS",
                "pathtoCustomTestAdapters": "",
                "runInParallel": "False",
                "runTestsInIsolation": "False",
                "codeCoverageEnabled": "False",
                "otherConsoleOptions": "",
                "distributionBatchType": "basedOnTestCases",
                "batchingBasedOnAgentsOption": "autoBatchSize",
                "customBatchSizeValue": "10",
                "batchingBasedOnExecutionTimeOption": "autoBatchSize",
                "customRunTimePerBatchValue": "60",
                "dontDistribute": "False",
                "testRunTitle": "Selenium Tests",
                "platform": "$(ReleasePlatform)",
                "configuration": "$(ReleaseConfiguration)",
                "publishRunAttachments": "true"
              }
            }
          ]
        }
      ],
      "environmentOptions": {
        "emailNotificationType": "OnlyOnFailure",
        "emailRecipients": "release.environment.owner;release.creator",
        "skipArtifactsDownload": false,
        "timeoutInMinutes": 0,
        "enableAccessToken": false,
        "publishDeploymentStatus": true
      },
      "demands": [],
      "conditions": [],
      "executionPolicy": {
        "concurrencyCount": 0,
        "queueDepthCount": 0
      },
      "schedules": [],
      "retentionPolicy": {
        "daysToKeep": 30,
        "releasesToKeep": 3,
        "retainBuild": true
      },
      "processParameters": {
        "inputs": [
          {
            "options": {},
            "properties": {},
            "name": "ConnectedServiceName",
            "label": "Azure subscription",
            "defaultValue": "f85bb269-a6c2-4b50-b89e-e7d5ec1a4e5f",
            "required": true,
            "type": "connectedService:AzureRM",
            "helpMarkDown": "Select the Azure Resource Manager subscription for the deployment.",
            "visibleRule": "",
            "groupName": ""
          },
          {
            "options": {},
            "properties": {
              "EditableOptions": "True"
            },
            "name": "WebAppName",
            "label": "App service name",
            "defaultValue": "$(AppServiceName)-qa",
            "required": true,
            "type": "pickList",
            "helpMarkDown": "Enter or select the name of an existing Azure App Service.",
            "visibleRule": "",
            "groupName": ""
          }
        ]
      },
      "properties": {}
    },
    {
      "id": 19,
      "name": "Delete QA",
      "rank": 5,
      "owner": {
        "id": "17256fe4-f2a3-4370-b081-ec283edb6a77",
        "displayName": "Mathieu Benoit",
        "uniqueName": "mabenoit@microsoft.com",
        "url": "https://app.vssps.visualstudio.com/A6d1a4ff8-9a1f-46cb-bd61-54cb9a797939/_apis/Identities/17256fe4-f2a3-4370-b081-ec283edb6a77",
        "imageUrl": "https://mabenoit-ms.visualstudio.com/_api/_common/identityImage?id=17256fe4-f2a3-4370-b081-ec283edb6a77"
      },
      "variables": {},
      "preDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 47
          }
        ]
      },
      "deployStep": {
        "tasks": [],
        "id": 50
      },
      "postDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 59
          }
        ]
      },
      "deployPhases": [
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": "none"
            },
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": []
            },
            "queueId": 72,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 1,
          "phaseType": 1,
          "name": "Agent phase",
          "workflowTasks": [
            {
              "taskId": "72a1931b-effb-4d2e-8fd8-f8472a07cb62",
              "version": "2.*",
              "name": "Remove Resource Group Lock",
              "refName": "AzurePowerShell1",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceNameSelector": "ConnectedServiceNameARM",
                "ConnectedServiceName": "",
                "ConnectedServiceNameARM": "$(Parameters.ConnectedServiceName)",
                "ScriptType": "FilePath",
                "ScriptPath": "$(System.DefaultWorkingDirectory)/CI/infra/RemoveResourceGroupDoNotDeleteLock.ps1",
                "Inline": "# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments",
                "ScriptArguments": "-ResourceGroupName $(Parameters.WebAppName)",
                "TargetAzurePs": "LatestVersion",
                "CustomTargetAzurePs": ""
              }
            },
            {
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "Delete Resource Group",
              "refName": "AzureResourceGroupDeployment1",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "$(Parameters.ConnectedServiceName)",
                "action": "DeleteRG",
                "resourceGroupName": "$(Parameters.WebAppName)",
                "location": "",
                "templateLocation": "Linked artifact",
                "csmFileLink": "",
                "csmParametersFileLink": "",
                "csmFile": "",
                "csmParametersFile": "",
                "overrideParameters": "",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "outputVariable": ""
              }
            }
          ]
        }
      ],
      "environmentOptions": {
        "emailNotificationType": "OnlyOnFailure",
        "emailRecipients": "release.environment.owner;release.creator",
        "skipArtifactsDownload": false,
        "timeoutInMinutes": 0,
        "enableAccessToken": false,
        "publishDeploymentStatus": true
      },
      "demands": [],
      "conditions": [],
      "executionPolicy": {
        "concurrencyCount": 0,
        "queueDepthCount": 0
      },
      "schedules": [],
      "retentionPolicy": {
        "daysToKeep": 30,
        "releasesToKeep": 3,
        "retainBuild": true
      },
      "processParameters": {
        "inputs": [
          {
            "options": {},
            "properties": {},
            "name": "ConnectedServiceName",
            "label": "Azure subscription",
            "defaultValue": "f85bb269-a6c2-4b50-b89e-e7d5ec1a4e5f",
            "required": true,
            "type": "connectedService:AzureRM",
            "helpMarkDown": "Select the Azure Resource Manager subscription for the deployment.",
            "visibleRule": "",
            "groupName": ""
          },
          {
            "options": {},
            "properties": {
              "EditableOptions": "True"
            },
            "name": "WebAppName",
            "label": "App service name",
            "defaultValue": "$(AppServiceName)-qa",
            "required": true,
            "type": "pickList",
            "helpMarkDown": "Enter or select the name of an existing Azure App Service.",
            "visibleRule": "",
            "groupName": ""
          }
        ]
      },
      "properties": {}
    },
    {
      "id": 20,
      "name": "Delete DEV",
      "rank": 6,
      "owner": {
        "id": "17256fe4-f2a3-4370-b081-ec283edb6a77",
        "displayName": "Mathieu Benoit",
        "uniqueName": "mabenoit@microsoft.com",
        "url": "https://app.vssps.visualstudio.com/A6d1a4ff8-9a1f-46cb-bd61-54cb9a797939/_apis/Identities/17256fe4-f2a3-4370-b081-ec283edb6a77",
        "imageUrl": "https://mabenoit-ms.visualstudio.com/_api/_common/identityImage?id=17256fe4-f2a3-4370-b081-ec283edb6a77"
      },
      "variables": {},
      "preDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 48
          }
        ]
      },
      "deployStep": {
        "tasks": [],
        "id": 49
      },
      "postDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 60
          }
        ]
      },
      "deployPhases": [
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": "none"
            },
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": []
            },
            "queueId": 72,
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 1,
          "phaseType": 1,
          "name": "Agent phase",
          "workflowTasks": [
            {
              "taskId": "94a74903-f93f-4075-884f-dc11f34058b4",
              "version": "2.*",
              "name": "Delete Resource Group",
              "refName": "AzureResourceGroupDeployment1",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "$(Parameters.ConnectedServiceName)",
                "action": "DeleteRG",
                "resourceGroupName": "$(Parameters.WebAppName)",
                "location": "",
                "templateLocation": "Linked artifact",
                "csmFileLink": "",
                "csmParametersFileLink": "",
                "csmFile": "",
                "csmParametersFile": "",
                "overrideParameters": "",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "outputVariable": ""
              }
            }
          ]
        }
      ],
      "environmentOptions": {
        "emailNotificationType": "OnlyOnFailure",
        "emailRecipients": "release.environment.owner;release.creator",
        "skipArtifactsDownload": false,
        "timeoutInMinutes": 0,
        "enableAccessToken": false,
        "publishDeploymentStatus": true
      },
      "demands": [],
      "conditions": [],
      "executionPolicy": {
        "concurrencyCount": 0,
        "queueDepthCount": 0
      },
      "schedules": [],
      "retentionPolicy": {
        "daysToKeep": 30,
        "releasesToKeep": 3,
        "retainBuild": true
      },
      "processParameters": {
        "inputs": [
          {
            "options": {},
            "properties": {},
            "name": "ConnectedServiceName",
            "label": "Azure subscription",
            "defaultValue": "f85bb269-a6c2-4b50-b89e-e7d5ec1a4e5f",
            "required": true,
            "type": "connectedService:AzureRM",
            "helpMarkDown": "Select the Azure Resource Manager subscription for the deployment.",
            "visibleRule": "",
            "groupName": ""
          },
          {
            "options": {},
            "properties": {
              "EditableOptions": "True"
            },
            "name": "WebAppName",
            "label": "App service name",
            "defaultValue": "$(AppServiceName)-dev",
            "required": true,
            "type": "pickList",
            "helpMarkDown": "Enter or select the name of an existing Azure App Service.",
            "visibleRule": "",
            "groupName": ""
          }
        ]
      },
      "properties": {}
    }
  ],
  "artifacts": [],
  "triggers": [],
  "releaseNameFormat": "Release-$(rev:r)",
  "url": "https://mabenoit-ms.vsrm.visualstudio.com/991f8a2a-2fdc-4d52-b5bb-138636785f82/_apis/Release/definitions/5",
  "_links": {
    "self": {
      "href": "https://mabenoit-ms.vsrm.visualstudio.com/991f8a2a-2fdc-4d52-b5bb-138636785f82/_apis/Release/definitions/5"
    },
    "web": {
      "href": "https://mabenoit-ms.visualstudio.com/991f8a2a-2fdc-4d52-b5bb-138636785f82/_release?definitionId=5"
    }
  },
  "tags": [],
  "properties": {
    "DefinitionCreationSource": {
      "$type": "System.String",
      "$value": "ReleaseImport"
    }
  }
}